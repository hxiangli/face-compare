layer{
  name: "data"
  type: "MemoryData"
  top: "data"
  top: "label"
  memory_data_param{
    batch_size:1
    channels:3
    height:55
    width:47
  }
  transform_param{
    mean_value: 127.5
    mean_value: 127.5
    mean_value: 127.5
    scale: 0.0078125
  }
}

layer {
	name: "conv1"
	type: "Convolution"
	bottom: "data"
	top: "conv1"

	param {
		name: "conv1_w"
		lr_mult: 1
		decay_mult: 1
	}

	param {
		name: "conv1_b"
		lr_mult: 2
		decay_mult: 0
	}

	convolution_param {
		num_output: 20
		kernel_size: 4
		stride: 1

		weight_filler {
			type: "xavier"
		}

		bias_filler {
			type: "constant"
		}
	}
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "conv1_bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
    bottom: "conv1"
    top: "conv1"
    name: "conv1_scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
	name: "relu1"
	type: "PReLU"
	bottom: "conv1"
	top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 40
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    bottom: "conv2"
    top: "conv2"
    name: "conv2_bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
    bottom: "conv2"
    top: "conv2"
    name: "conv2_scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
	name: "relu2"
	type: "PReLU"
	bottom: "conv2"
	top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    bottom: "conv3"
    top: "conv3"
    name: "conv3_bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
    bottom: "conv3"
    top: "conv3"
    name: "conv3_scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 80
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    bottom: "conv4"
    top: "conv4"
    name: "conv4_bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
    bottom: "conv4"
    top: "conv4"
    name: "conv4_scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "fc160_1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc160_1"
  param {
    name: "fc160_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc160_1_b"
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    bottom: "fc160_1"
    top: "fc160_1"
    name: "fc160_1bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
    bottom: "fc160_1"
    top: "fc160_1"
    name: "fc160_1scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
  name: "fc160_2"
  type: "InnerProduct"
  bottom: "conv4"
  top: "fc160_2"
  param {
    name: "fc160_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc160_2_b"
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 160
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    bottom: "fc160_2"
    top: "fc160_2"
    name: "fc160_2bn"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: true
    }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
    bottom: "fc160_2"
    top: "fc160_2"
    name: "fc160_2scale"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
  name: "fc160"
  type: "Eltwise"
  bottom: "fc160_1"
  bottom: "fc160_2"
  top: "fc160"
  eltwise_param {
    operation: SUM
  }
}

layer {
  name: "fc_identity"
  type: "LargeMarginInnerProduct"
  bottom: "fc160"
  bottom: "label"
  top: "fc_identity"
  top: "lambda"
  param {
    name: "fc_softmax"
    lr_mult: 1
  }
  largemargin_inner_product_param {
    num_output: 3
    type: SINGLE
    base: 0
    gamma: 0
    power: 45
    lambda_min: 0
    weight_filler {
      type: "msra"
    }
  }
}